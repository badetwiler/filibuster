<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:property-placeholder location="classpath:db.properties"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="userDao" class="com.filibuster.data.dao.UserDaoImpl" />
    <bean id="groupDao" class="com.filibuster.data.dao.GroupDaoImpl" />

    <bean id="groupService" class="com.filibuster.data.service.FilibusterGroupServiceImpl" >
        <constructor-arg name="userDao" ref="userDao" />
        <constructor-arg name="groupDao" ref="groupDao" />
    </bean>

    <bean id="userService" class="com.filibuster.data.service.FilibusterUserServiceImpl" >
        <constructor-arg name="userDao" ref="userDao" />
    </bean>


    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.filibuster.data.*" />
        <property name="jpaVendorAdapter" ref="jpaAdapter" />
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
    </bean>

    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
        <property name="generateDdl" value="true" />
        <property name="showSql" value="true" />
    </bean>

    <bean id="javaJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>


    <bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <ref local="authDataSource" />
        </property>
    </bean>

    <bean id="authDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="idleConnectionTestPeriodInSeconds" value="60"/>
        <property name="idleMaxAgeInSeconds" value="240"/>
        <property name="maxConnectionsPerPartition" value="5"/>
        <property name="minConnectionsPerPartition" value="2"/>
        <property name="partitionCount" value="2"/>
        <property name="acquireIncrement" value="1"/>
        <property name="statementsCacheSize" value="50"/>
        <property name="transactionRecoveryEnabled" value="false" />
    </bean>




</beans>